/* 
 * Student survey system API
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using IO.Swagger.Client;
using IO.Swagger.Api;
using IO.Swagger.Model;

namespace IO.Swagger.Test
{
    /// <summary>
    ///  Class for testing SurveysApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class SurveysApiTests
    {
        private SurveysApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new SurveysApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of SurveysApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' SurveysApi
            //Assert.IsInstanceOfType(typeof(SurveysApi), instance, "instance is a SurveysApi");
        }

        /// <summary>
        /// Test SurveysActivateIdPost
        /// </summary>
        [Test]
        public void SurveysActivateIdPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? id = null;
            //instance.SurveysActivateIdPost(id);
            
        }
        /// <summary>
        /// Test SurveysDeactivateIdPost
        /// </summary>
        [Test]
        public void SurveysDeactivateIdPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? id = null;
            //instance.SurveysDeactivateIdPost(id);
            
        }
        /// <summary>
        /// Test SurveysGet
        /// </summary>
        [Test]
        public void SurveysGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //int? page = null;
            //int? count = null;
            //var response = instance.SurveysGet(name, page, count);
            //Assert.IsInstanceOf<List<SurveyDto>> (response, "response is List<SurveyDto>");
        }
        /// <summary>
        /// Test SurveysIdDelete
        /// </summary>
        [Test]
        public void SurveysIdDeleteTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? id = null;
            //instance.SurveysIdDelete(id);
            
        }
        /// <summary>
        /// Test SurveysIdGet
        /// </summary>
        [Test]
        public void SurveysIdGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? id = null;
            //var response = instance.SurveysIdGet(id);
            //Assert.IsInstanceOf<SurveyDto> (response, "response is SurveyDto");
        }
        /// <summary>
        /// Test SurveysIdPut
        /// </summary>
        [Test]
        public void SurveysIdPutTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? id = null;
            //SurveyDto body = null;
            //instance.SurveysIdPut(id, body);
            
        }
        /// <summary>
        /// Test SurveysMyNotFilledFormGet
        /// </summary>
        [Test]
        public void SurveysMyNotFilledFormGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //int? page = null;
            //int? count = null;
            //var response = instance.SurveysMyNotFilledFormGet(name, page, count);
            //Assert.IsInstanceOf<List<SurveyDto>> (response, "response is List<SurveyDto>");
        }
        /// <summary>
        /// Test SurveysMySurveysGet
        /// </summary>
        [Test]
        public void SurveysMySurveysGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //int? page = null;
            //int? count = null;
            //var response = instance.SurveysMySurveysGet(name, page, count);
            //Assert.IsInstanceOf<List<SurveyDto>> (response, "response is List<SurveyDto>");
        }
        /// <summary>
        /// Test SurveysPost
        /// </summary>
        [Test]
        public void SurveysPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //SurveyDto body = null;
            //var response = instance.SurveysPost(body);
            //Assert.IsInstanceOf<SurveyDto> (response, "response is SurveyDto");
        }
        /// <summary>
        /// Test SurveysPut
        /// </summary>
        [Test]
        public void SurveysPutTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //SurveyDto body = null;
            //var response = instance.SurveysPut(body);
            //Assert.IsInstanceOf<SurveyDto> (response, "response is SurveyDto");
        }
    }

}
